plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

configurations {
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    useFabricMixin = true
}

repositories {
    // JEI maven repositories
    maven { url = "https://dvs1.progwml6.com/files/maven/" }
    maven { url = "https://modmaven.k-4u.nl" }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    // Remove the following line to gain access to JEI's API in code.
//    modCompileOnly "mezz.jei:jei-${rootProject.jei_mc_version}:${rootProject.jei_version}:api"
    modRuntime "mezz.jei:jei-${rootProject.jei_mc_version}:${rootProject.jei_version}"

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentForge(project(path: ":common")) {
        transitive = false
    }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "forge"
}

jar {
    classifier "dev"
}

java {
    withSourcesJar()
}

sourcesJar {
    def commonSources = project(":common").remapSourcesJar
    dependsOn commonSources
    from zipTree(commonSources.output)
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                classifier null
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        if (System.getenv("MODMAVEN_API_KEY") != null) {
            maven {
                name = "modmaven"
                url = "http://modmaven.dev/artifactory/local-releases"
                credentials {
                    username = "dodogang"
                    password = System.getenv("MODMAVEN_API_KEY")
                }
            }
        }
    }
}
